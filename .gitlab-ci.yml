# Simple GitLab CI/CD Pipeline for Laravel 11 Project
# Build dependencies and run tests

# Define the stages
stages:
  - build
  - test

# Cache configuration for faster builds
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/
    - .composer-cache/

# Build Stage - Install dependencies and prepare environment
build:
  image: php:8.2-cli
  stage: build
  before_script:
    # Install system dependencies including SQLite development packages
    - apt-get update -qq && apt-get install -y -qq git curl libmcrypt-dev libjpeg-dev libpng-dev libfreetype6-dev libbz2-dev libzip-dev unzip sqlite3 libsqlite3-dev
    
    # Install PHP extensions
    - docker-php-ext-install pdo_sqlite zip bcmath gd
    
    # Install Composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    
    # Set Composer cache directory
    - export COMPOSER_CACHE_DIR=.composer-cache
  script:
    # Install dependencies
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
    
    # Set up Laravel environment
    - cp .env.example .env
    - php artisan key:generate --ansi
    
    # Create testing environment file with SQLite
    - |
      cat > .env.testing << EOF
      APP_NAME=Laravel
      APP_ENV=testing
      APP_KEY=$(php artisan --no-ansi key:generate --show)
      APP_DEBUG=true
      APP_URL=http://localhost
      
      DB_CONNECTION=sqlite
      DB_DATABASE=:memory:
      
      LOG_CHANNEL=stack
      LOG_DEPRECATIONS_CHANNEL=null
      LOG_LEVEL=debug
      
      BROADCAST_DRIVER=log
      CACHE_DRIVER=array
      FILESYSTEM_DISK=local
      QUEUE_CONNECTION=sync
      SESSION_DRIVER=array
      SESSION_LIFETIME=120
      
      MAIL_MAILER=array
      EOF
    
    # Dump autoload to ensure all classes are properly loaded
    - composer dump-autoload --optimize
    
    - echo "Build completed successfully"
  artifacts:
    paths:
      - vendor/
      - .env
      - .env.testing
    expire_in: 1 hour

# Test Stage - Run all tests
test:
  image: php:8.2-cli
  stage: test
  dependencies:
    - build
  before_script:
    # Install system dependencies including SQLite development packages
    - apt-get update -qq && apt-get install -y -qq git curl libmcrypt-dev libjpeg-dev libpng-dev libfreetype6-dev libbz2-dev libzip-dev unzip sqlite3 libsqlite3-dev
    
    # Install PHP extensions
    - docker-php-ext-install pdo_sqlite zip bcmath gd
  script:
    # Debug: Check if Category model exists
    - echo "Checking for Category model..."
    - ls -la app/Models/
    - test -f app/Models/Category.php && echo "Category.php exists" || echo "Category.php NOT found"
    
    # Debug: Check composer autoload
    - echo "Checking composer autoload..."
    - composer dump-autoload --optimize
    
    # Clear caches
    - php artisan config:clear --env=testing
    - php artisan cache:clear --env=testing
    
    # Run database migrations
    - php artisan migrate --force --env=testing
    
    # Debug: Test if we can load the Category class
    - php -r "require 'vendor/autoload.php'; echo class_exists('App\\Models\\Category') ? 'Category class found' : 'Category class NOT found'; echo PHP_EOL;"
    
    # Run all tests
    - vendor/bin/phpunit --testdox